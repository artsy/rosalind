#!/bin/sh

# This assumes you have general prerequisites installed as by:
# https://github.com/artsy/potential/blob/main/scripts/setup

trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e

echo "Installing dependencies..."
brew bundle

if command -v mise >/dev/null; then
  echo "Installing language dependencies with mise"
  mise install
else
  echo "Skipping language dependencies installation (mise not found)"
fi

echo "Installing dependencies..."
yarn install || (npm install --global yarn@latest && yarn install)

echo "Installing foreman for local configuration..."
gem update --system
gem install foreman

echo "Downloading .env.shared (for common internal configuration)..."
aws s3 cp s3://artsy-citadel/rosalind/.env.shared ./

if [ ! -e ".env" ]; then
  echo "Initializing .env from .env.example (for any custom configuration)..."
  # Certain values must be in .env for docker build, so substitute in shared values
  foreman run envsubst < .env.example > .env
fi

echo "Setting up bundler..."
gem install bundler
if command -v rbenv >/dev/null; then rbenv rehash; fi

echo "Installing gems..."
# To mitigate 'BuildError: No pg_config..' when installing pg 1.1.4: get pg path via brew info, cleanup output with cut, get version with basename, set bundler config option for pg gem
bundle config build.pg --with-pg-config=$(brew --prefix)/Cellar/postgresql@14/$(brew info postgresql@14 | grep $(brew --prefix)/Cellar/postgresql@14 | cut -d' ' -f1 | xargs basename)/bin/pg_config
bundle install

echo "Setting up database..."
bundle exec rails db:create db:migrate --trace

echo "
Done! You should be able to run some tests, as in:

    bundle exec rake

To start a local server (at http://localhost:3000):

    foreman start
"
